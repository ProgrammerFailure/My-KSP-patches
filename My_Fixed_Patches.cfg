@PART[cryoengine*|CEX*]:HAS[@MODULE[ModuleEngines*]]:FINAL
{
  @MODULE[ModuleEngines*]
  {
    @atmosphereCurve
    {
      k0 = #$key,0[1, ]$
      @k0 *= 2
      @key,0 = #0 $k0$
      
      k1 = #$key,1[1, ]$
      @k1 *= 2
      @key,1 = #1 $k1$
    }
  }
}
@PART[TCA*]
{
	@techRequired = start
	@entryCost = 0
}
@GLOBAL_RESOURCE:FINAL
{
	@Distribution
	{
		%PresenceChance = 100
	}
}
@PART[WOLF_Harvester_125]:NEEDS[WOLF|MKS]:FINAL
{
	MODULE
	{
		name = WOLF_RecipeOption
		RecipeDisplayName = god

		InputResources = Power,1
		OutputResources = Fertilizer,100,Fuel,100,Maintenance,100,TransportCredits,100,ColonySupplies,100,Food,100,Habitation,100,Lab,100,LifeSupport,100,Mulch,100,EngineerCrewPoint,100,FarmerCrewPoint,100,KolonistCrewPoint,100,MechanicCrewPoint,100,MinerCrewPoint,100,TechnicianCrewPoint,100,GeologistCrewPoint,100,MedicCrewPoint,100,ScientistCrewPoint,100,QuartermasterCrewPoint,100,PilotCrewPoint,100
	}
}
@PARTUPGRADE[ProceduralParts*]:NEEDS[ProceduralParts]:FINAL
{
	@techRequired = start
}
@PART:HAS[@MODULE[SCANsat]]:FINAL
{
	@MODULE[SCANsat],*
	{
		@fov = 60
	}
}

@PART:NEEDS[WildBlueIndustries]:HAS[@MODULE[WBIMultipurpose*]&!MODULE[WBIResourceDistributor]]:FINAL
{
	%MODULE[WBIResourceDistributor]
}

@PART:NEEDS[WildBlueIndustries]:HAS[@MODULE[WBIConvertibleStorage]&!MODULE[WBIResourceDistributor]]:FINAL
{
	%MODULE[WBIResourceDistributor]
}

@PART:HAS[@MODULE[ModuleEngines*]&!MODULE[ModuleGimbal]]:FINAL
{
	MODULE
	{
		name = ModuleGimbal
		gimbalTransformName = thrustTransform   
		gimbalRange = 0.0
	}
}
@PART:NEEDS[Sandcastle]:HAS[@MODULE[WBIPrintShop]]:FINAL
{
	@MODULE[WBIPrintShop*]
	{
		@maxPrintVolume = -1
		@printSpeedUSec = 1000
	}
	%MODULE[ModuleInventoryPart]
	{
		%InventorySlots = 60
		%packedVolumeLimit = 999999
	}
}
@PART:HAS[@MODULE[MechJebCore]]:FINAL
{
	@MechJebLocalSettings
	{
		@MechJeb*
		{
			unlockTechs = start
		}
	}
}
@PART:HAS[@MODULE[ModuleScienceLab],!MODULE[ModuleScienceConverter]]:FINAL
{
	MODULE
	{
		name = ModuleScienceConverter
		dataProcessingMultiplier = 0.5 // Multiplier to data processing rate and therefore science rate
		scientistBonus = 0.25	//Bonus per scientist star - need at least one! So 0.25x - 2.5x 
		researchTime = 1		//Larger = slower.  Exponential!
		scienceMultiplier = 5	//How much science does data turn into?
		scienceCap = 500000		//How much science can we store before having to transmit?		
		powerRequirement = 5	//EC/Sec to research
		ConverterName = #autoLOC_502055 //#autoLOC_502055 = Research
		StartActionName = #autoLOC_502056 //#autoLOC_502056 = Start Research
		StopActionName = #autoLOC_502057 //#autoLOC_502057 = Stop Research
	}
}
@PART:HAS[@MODULE[ModuleScienceLab]]:FINAL
	{
		@MODULE[ModuleScienceLab]{
			@dataStorage = 70000
			@crewsRequired = 0
		}
		@MODULE[ModuleScienceConverter]{
			@scienceCap = 7000000
			@dataProcessingMultiplier = 500000
		}
		MODULE
		{
			name = ModuleDataTransmitter
			antennaType = RELAY
			packetInterval = 0.01
			packetSize = 2000
			packetResourceCost = 12.0
			requiredResource = ElectricCharge
			antennaPower = 50000000000
			antennaCombinable = true
		}
	}
@PART:HAS[@MODULE[ModuleGimbal]]:FINAL
{
	@MODULE[ModuleGimbal]
	{
		@gimbalRange += 11
	}
}
@PART:HAS[@MODULE[ModuleReactionWheel]]:FINAL
{
	@MODULE[ModuleReactionWheel]
	{
		@PitchTorque *= 20
		@YawTorque *= 20
		@RollTorque *= 20
	}
}

@PART:HAS[@MODULE[KerbalEVA]]:FINAL
{
	@MODULE[KerbalEVA]
	{
		@walkSpeed = 5
		@strafeSpeed = 1.5
		@runSpeed = 13
		@turnRate = 8
		@maxJumpForce = 20
		@rotPower = 4
		@linPower = 32
	}
}

@KISConfig:FINAL
{
	@EvaPickup
	{
		@maxDistance = 30000
		@grabMaxMass = 1000000

	}
	@Editor
	{
		@addToAllSeats = KIS.electricScrewdriver
	}
}

@EXPERIMENT_DEFINITION[plantGrowth|progradeKuarqs|retrogradeKuarqs|eccentricKuarqs|bioproducts|kuarqsBioproducts|zoologyBay]:FINAL
{
	@scienceCap *= 40
}

@EL_DefaultStructureRecipe:HAS[#SpecializedParts]
{
	-#SpecializedParts
}

//@PART:HAS[MODULE[WBIGraviticGenerator]]:FINAL
//{
//	@MODULE[WBIGraviticGenerator],*
//	{
//		-INPUT_RESOURCE,*
//		INPUT_RESOURCE
//		{
//			ResourceName = FusionPellets
//			Ratio = 0.00015
//			FlowMode = STAGE_PRIORITY_FLOW
//		}
//	}
//}

//@PART:HAS[MODULE[WBIModuleGeneratorFX]]:FINAL
//{
//	@MODULE[WBIModuleGeneratorFX],*
//	{
//		-INPUT_RESOURCE,*
//		INPUT_RESOURCE
//		{
//			ResourceName = FusionPellets
//			Ratio = 0.00015
//			FlowMode = STAGE_PRIORITY_FLOW
//		}
//	}
//}

//@PART:HAS[MODULE[WBIGraviticEngineGenerator]]:FINAL
//{
//	@MODULE[WBIGraviticEngineGenerator],*
//	{
//		@RESOURCE_MODE,*
//		{
//			-INPUT_RESOURCE,*
//			INPUT_RESOURCE
//			{
//				ResourceName = FusionPellets
//				Ratio = 0.00015
//				FlowMode = STAGE_PRIORITY_FLOW
//			}
//		}
//	}
//}
//add this to :HAS if it works first time: |MODULE[WBIModuleGeneratorFX]|MODULE[WBIGraviticGenerator]
